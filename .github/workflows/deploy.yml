name: Deploy to Minecraft Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      restart:
        description: 'Restart the server after deployment'
        required: false
        default: 'false'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace
          
      # Skip the ssh-keyscan step and use StrictHostKeyChecking=no instead
      
      - name: Setup SSH Config
        run: |
          mkdir -p ~/.ssh
          echo "Host minecraft-server" >> ~/.ssh/config
          echo "  HostName ${{ secrets.SERVER_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
          echo "  Port ${{ secrets.SSH_PORT }}" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Test SSH Connection
        run: ssh minecraft-server "echo SSH connection successful"

      - name: Deploy Server Config Files
        run: |
          rsync -avz --exclude='.git' ./server/config/ minecraft-server:/etc/minecraft/server/config/
          
      - name: Deploy Server Scripts
        run: |
          rsync -avz ./server/scripts/ minecraft-server:/etc/minecraft/server/scripts/
          ssh minecraft-server "chmod +x /etc/minecraft/server/scripts/*.sh"
          
      - name: Deploy Monitoring Tools
        run: |
          rsync -avz ./monitoring/ minecraft-server:/etc/minecraft/monitoring/
          ssh minecraft-server "chmod +x /etc/minecraft/monitoring/*.py"
          
      - name: Restart Minecraft Server
        if: ${{ github.event.inputs.restart == 'true' || github.event_name == 'workflow_dispatch' }}
        run: |
          ssh minecraft-server "sudo systemctl restart minecraft.service"
          ssh minecraft-server "sudo systemctl status minecraft.service"