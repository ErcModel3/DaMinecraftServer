name: Restart the Minecraft Server

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
    inputs:
      restart:
        description: 'Type "yes" to confirm restarting the server'
        required: true
        default: 'no'
        type: string
        
jobs:
  ValidateSecrets:
    runs-on: ubuntu-latest
    steps:
      - name: Confirm repo secrets are set
        run: |
          echo "Checking if all required secrets are set..."
          if [ -z "${{ secrets.SERVER_HOST_IP }}" ]; then
            echo "⚠️ SERVER_HOST secret is not set or empty!"
            exit 1
          else
            echo "✅ SERVER_HOST is set"
          fi
          
          if [ -z "${{ secrets.SSH_PORT }}" ]; then
            echo "⚠️ SSH_PORT secret is not set or empty!"
            exit 1
          else
            echo "✅ SSH_PORT is set"
          fi
          
          if [ -z "${{ secrets.DEPLOY_USER }}" ]; then
            echo "⚠️ DEPLOY_USER secret is not set or empty!"
            exit 1
          else
            echo "✅ DEPLOY_USER is set"
          fi

  ValidateSSH:
    runs-on: ubuntu-latest
    steps:
      - name: Test SSH port connectivity
        run: |
          echo "Testing SSH port connectivity to ${{ secrets.SERVER_HOST_IP }} on port ${{ secrets.SSH_PORT }}..."
          timeout 5 bash -c "</dev/tcp/${{ secrets.SERVER_HOST_IP }}/${{ secrets.SSH_PORT }}" && echo "✅ SSH port is reachable" || echo "❌ SSH port is not reachable"

      # Add a port connectivity test
      - name: Test Port Connectivity
        run: |
          echo "Testing connectivity to ${{ secrets.SERVER_HOST_IP }} on port ${{ secrets.SSH_PORT }}..."
          if nc -zvw5 ${{ secrets.SERVER_HOST_IP }} ${{ secrets.SSH_PORT }}; then
            echo "✅ Port ${{ secrets.SSH_PORT }} is open and accepting connections"
          else
            echo "❌ Failed to connect to port ${{ secrets.SSH_PORT }}"
            echo "This could indicate port forwarding issues, firewall rules, or that SSH service is not running"
            exit 1
          fi
    
  RestartServer:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.restart == 'yes'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Restart Minecraft Server
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.DEPLOY_USER }}@${{ secrets.SERVER_HOST_IP }} "sudo systemctl restart minecraft.service"
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.DEPLOY_USER }}@${{ secrets.SERVER_HOST_IP }} "sudo systemctl status minecraft.service"
          echo "✅ Minecraft server restarted successfully!"